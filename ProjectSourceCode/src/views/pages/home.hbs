{{> nav }}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://api.tiles.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.js"></script>
<link href="https://api.tiles.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.css" rel="stylesheet" />

<style>
  
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* prevents scrollbars from showing up */
  }

  #map {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }

  .marker {
    background-image: url('https://docs.mapbox.com/help/demos/custom-markers-gl-js/mapbox-icon.png');
    background-size: cover;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
  }

  .mapboxgl-popup {
    max-width: 200px;
  }

  .mapboxgl-popup-content {
    text-align: center;
    font-family: 'Open Sans', sans-serif;
  }

  .pos-f-t,
  .collapse {
    z-index: 10;
    position: relative;
  }

  .bottom-left-controls {
    position: absolute;
    bottom: 20px;
    left: 20px;
    z-index: 5;
  }

  .top-left-controls {
  position: absolute;
  top: 80px; /* increased from 20px to 80px */
  left: 20px;
  z-index: 5;
  background-color: white;
  padding: 10px;
  border-radius: 8px;
}
</style>

<div class="top-left-controls">
  <select id="friendFilter" class="form-select">
    <option value="me">Only My Pins</option>
    <option value="all">All Friends</option>
  </select>
</div>

<div class="bottom-left-controls">
  <button id="toggle-add-pin" class="btn btn-primary">ðŸ§· Add Pin Mode</button>
  <button id="toggle-style" class="btn btn-secondary">ðŸŒ“ Switch Map Style</button>
</div>

<div id="map"></div>

<script>
  const userId = {{userId}};
  let allPins = [];

  mapboxgl.accessToken = 'pk.eyJ1IjoiZm90b3M0ZmFtaWx5IiwiYSI6ImNtOGh6eWx1cDA1eXMybHB1Z2kyajJqbG0ifQ.9paU93BLc6W7vG-8KuOxng';

  const map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/fotos4family/cm9bzyq2l007001sp2el69jnl',
    center: [-96, 37.8],
    zoom: 2,
  });

  let addPinMode = false;
  document.getElementById("toggle-add-pin").addEventListener("click", () => {
    addPinMode = !addPinMode;
    const btn = document.getElementById("toggle-add-pin");
    btn.classList.toggle("btn-success", addPinMode);
    btn.classList.toggle("btn-primary", !addPinMode);
    btn.textContent = addPinMode ? "âœ… Click Map to Add Pin" : "ðŸ§· Add Pin Mode";
  });

  let currentStyle = "light";
  document.getElementById("toggle-style").addEventListener("click", () => {
    currentStyle = currentStyle === "light" ? "dark" : "light";
    map.setStyle(currentStyle === "light"
      ? "mapbox://styles/fotos4family/cm9bzyq2l007001sp2el69jnl"
      : "mapbox://styles/mapbox/dark-v11");
  });

  async function fetchAndRenderPins() {
    try {
      const response = await fetch('/api/all-pins');
      allPins = await response.json();
      renderPins();
    } catch (err) {
      console.error("Error fetching pins:", err);
    }
  }

  function renderPins() {
  // Clear existing markers
  document.querySelectorAll('.mapboxgl-marker').forEach(el => el.remove());

  const selected = document.getElementById("friendFilter").value;

  allPins.forEach(pin => {
    // Only my pins
    if (selected === "me" && pin.user_id !== userId) return;

    // Specific friend selected â€” show only their pins
    if (selected !== "me" && selected !== "all" && pin.first_name !== selected) return;

    // Add marker
    const el = document.createElement("div");
    el.className = 'marker';

    new mapboxgl.Marker(el)
      .setLngLat([pin.longitude, pin.latitude])
      .setPopup(new mapboxgl.Popup({ offset: 25 }).setHTML(`
        <h6>${pin.label}</h6>
        <small>By ${pin.first_name}</small>
        <br><a href="/pin/${pin.id}" class="btn btn-sm btn-outline-primary mt-2">View & Upload</a>
      `))
      .addTo(map);
  });
}

  document.getElementById("friendFilter").addEventListener("change", renderPins);

  map.on('click', async function (e) {
    if (!addPinMode) return;

    const coords = e.lngLat;
    const el = document.createElement("div");
    el.className = "marker";

    new mapboxgl.Marker(el)
      .setLngLat([coords.lng, coords.lat])
      .setPopup(new mapboxgl.Popup({ offset: 25 }).setHTML(`<h6>New Pin</h6><p>Lat: ${coords.lat.toFixed(4)}, Lng: ${coords.lng.toFixed(4)}</p>`))
      .addTo(map);

    await fetch("/api/pins", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        latitude: coords.lat,
        longitude: coords.lng,
        label: "New Pin"
      }),
    });

    fetchAndRenderPins();
  });

  fetchAndRenderPins();

  fetch("/friends-list")
    .then(res => res.json())
    .then(friends => {
      const select = document.getElementById("friendFilter");
      friends.forEach(friend => {
        const opt = document.createElement("option");
        opt.value = friend.username; // Assumes username is unique (e.g., first_name or id)
        opt.textContent = friend.username;
        select.appendChild(opt);
      });
    });
</script>
